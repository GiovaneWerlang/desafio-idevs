/*
O número primo 41, pode ser escrito como a soma de 6 números primos consecutivos:

    41 = 2 + 3 + 5 + 7 + 11 + 13

Essa é a maior soma de números primos consecutivos que gera um número primo abaixo de 100.

A maior soma de números primos consecutivos abaixo de 500 que gera um número primo 
contém 14 termos e é igual à 281:

281 = 2 + 3 + 5 + 7 + 11 + 13 + 17 + 19 + 23 + 29 + 31 + 37 + 41 + 43

Faça um algoritmo que receba um número n e mostre qual é o maior número primo abaixo 
de n que é obtido através da soma consecutiva de números primos.
 */
package ids.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Giovane
 */
public class IfrDesafio3 extends javax.swing.JInternalFrame {

    /**
     * Creates new form IfrDesafio3
     */
    public IfrDesafio3() {
        initComponents();
        tfNumero.setToolTipText("Informe um número inteiro.");
    }

    public boolean testaPrimo(int numero){
        
        //O numero 1 não é primo
        if(numero == 1) return false;
        
        //Váriavel contaDivisores armazena a quantidade de divisores de um número
        int contaDivisores = 1;
        
        //Laço for percorre os possíveis divisores do numero iniciando no número 2
        //Pois todos os números são divisiveis por 1
        //E o laço testa apenas os numeros menores que o proprio número
        //Pois todo número é divisivel por ele mesmo
        for (int i = 2; i < numero; i++) {
            
            if(numero % i == 0){
                contaDivisores++;
            }
        }
        
        //Retorna se é um primo ou não através da verificação do número de divisores
        return contaDivisores == 1;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfNumero = new javax.swing.JTextField();
        btCalcular = new javax.swing.JButton();
        lbResultado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Desafio 3");

        tfNumero.setToolTipText("Informe um número inteiro.");

        btCalcular.setText("Calcular");
        btCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularActionPerformed(evt);
            }
        });

        lbResultado.setText("Resultado:");

        jLabel2.setText("Informe um número:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(177, Short.MAX_VALUE)
                .addComponent(lbResultado)
                .addGap(164, 164, 164))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(tfNumero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCalcular))
                .addGap(59, 59, 59)
                .addComponent(lbResultado)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularActionPerformed
        // Se o campo de texto tfNumero estiver vazio o usuario sera alertado
        if(tfNumero.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Informe um número inteiro.", "Campo vazio.", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Tentamos transformar a string contida no campo de texto tfNumero para um inteiro
        //O try catch ira detectar se não for um número inteiro e se caso positivo alertar o usuário
        try{
            
            int n = Integer.parseInt(tfNumero.getText());
            
            //Variável resultado será usado para armazenar temporariamento o resultado da soma dos primos
            int resultado = 0;

            //Somas será usado para armazenar todas as somas
            ArrayList<Integer> somas = new ArrayList<>();
            
            //Laço for usado para percorrer números de 1 até n
            for (int i = 1; i < n; i++) {
                
                //Aqui verificamos se o resultado sendo acumulado é menor que n
                //E então verificamos se o número i é um primo
                //Invocando o método testaPrimo que retorna um boolean
                //Verificamos se o resultado ainda é menor que n
                if(resultado < n && testaPrimo(i) == true && (resultado+i < n)){
                    
                    //Se o resultado ainda é menor que n e i é um primo acumulamos o valor de i ao resultado                                        
                    resultado +=i;
                    
                    //Adicionamos o valor de resultado a uma posição do arraylist somas
                    somas.add(resultado);
                    
                }
            }
            
            if(somas.isEmpty()){
                //Se o arraylist somas está vazio o usuário será informado
                JOptionPane.showMessageDialog(this, "O número informado não resultou em uma soma. Informe um número maior.", "Nenhuma soma resultante.", JOptionPane.ERROR_MESSAGE);
            
            }else{
            
                //Laço for será usado para percorrer o arraylist somas do ultimo indice para o primeiro/Do maior i para o menor             
                for (int i = somas.size()-1; i >= 0; i--) {
                    //Testamos se o inteiro no indice i do arraylist somas é um primo
                    if(testaPrimo(somas.get(i))){
                        //Como estamos testando do maior para o menor o primeiro primo encontrado será a maior soma resultando em primo
                        //O valor encontrado é utilizado para mostrar o resultado no campo de texto
                        lbResultado.setText("Resultado: " + somas.get(i));
                        //Mudamos o valor de i para -1 para sair do laço
                        i = -1;
                    }
                }
            
            }
        }catch(NumberFormatException erro){
            JOptionPane.showMessageDialog(this, "Informe um número inteiro." + "\n" + erro.getMessage(), "Valor incorreto.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btCalcularActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCalcular;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbResultado;
    private javax.swing.JTextField tfNumero;
    // End of variables declaration//GEN-END:variables
}
